[{"content":"If you are landing on this page you most probably already know what SSH is and how to use it through CLI.\nIf not, you can always read here.\nUsually, in the beginning, people start with simple ssh \u0026lt;user\u0026gt;@\u0026lt;host\u0026gt; CLI usage. With time, people start using more and more advanced options which results in having messed-up commands that are hard or impossible to remember.\nLet\u0026rsquo;s give you an example:\n## SSH with custom non-default port ssh \u0026lt;user\u0026gt;@\u0026lt;long_host\u0026gt; -p \u0026lt;custom_non_default_port\u0026gt; # SSH with custom access file ssh -i /path/to/another_access_file \u0026lt;another_user\u0026gt;@\u0026lt;another_long_host\u0026gt; -p \u0026lt;some_magical_non_default_port\u0026gt; # SSH through Jump server ssh -J \u0026lt;magical_host_to_jump_server\u0026gt; \u0026lt;target_host\u0026gt; #.. and so on and so forth Remembering dictionary information nowadays should be considered a crime! So what you can do to make yourself a proper citizen of the world?\nSSH config on the rescue SSH utility has a metaverse of options on its own, so let\u0026rsquo;s try to utilize them and simplify our work! One of them is the SSH config. The SSH config is a configurational file, usually stored at ~/.ssh/config where you can pre-configure hosts and access configuration that you use frequently and simplify the access shown above to:\n# access with custom port ssh test # access with custom access file ssh ci # access through jump server ssh prod Setup  Check whether you have ~/.ssh/config on your local setup. If, let\u0026rsquo;s create it! Open the file with a text editor (vim, VSCode, nano, etc\u0026hellip;) Write down:  Host test Hostname \u0026lt;[host|ip]\u0026gt; # mandatory Port \u0026lt;port\u0026gt; # optional User \u0026lt;username\u0026gt; # optional | nice-to-have IdentityFile \u0026lt;path/to/identity_file\u0026gt; # optional | nice-to-have ProxyJump \u0026lt;[host|ip]_of_jump_server\u0026gt; # optional Save the file  Where:\n host|ip - is the DNS host or IP address of the target server port - you can skip this if the target server runs SSH on the default 22 port. Otherwise, you will need to state it username - the name of the remote user on the target server you want to connect with. NOTE: Default is your local machine username /path/to/identity_file - this is the path to the private key you use to connect to the target server. NOTE: Default is ~/.ssh/id_rsa or an iteration of the files within ~/.ssh directory host|ip_of_jump_server - if you want to connect to a target server using a jump server, you should specify its DNS host or IP address here.  There are a ton of other options which you can explore here\nUsage and Access Just run ssh test. If you have configured everything properly you should be connected to the target server with a clean and easy-to-remember CLI.\nTroubleshooting In case the setup does not work, there are a few things you can inspect:\n üôá Make sure you saved ~/.ssh/config ‚úèÔ∏è Check for typos within the ~/.ssh/config ‚òéÔ∏è If using DNS records for hostname configuration, inspect whether your setup can resolve them nslookup \u0026lt;host\u0026gt; üîå If you are not sure whether the configured port is open you can always run nc -G 1 \u0026lt;host\u0026gt; \u0026lt;port\u0026gt;, where 1 is one second of timeout. If the operation times out, most probably the port is not open. üñ®Ô∏è Check for network access to the target server ping \u0026lt;host\u0026gt;. NOTE: Sometimes admins disable ping, so it may not work. You can use traceroute in that case.  Wrap-up In the beginning, it may seem a burden to maintain your SSH config file. But with time and exposure to more servers you will eventually end up using SSH config anyway.\nIn the end - What if you want to create another host for access. Just repeat the steps above and enjoy your day! üéâ\n PS: If you have a friend who is struggling with SSH you can always share it with the links down-below ‚¨áÔ∏è\n","permalink":"https://thetooth.io/blog/ssh_access/","summary":"If you are landing on this page you most probably already know what SSH is and how to use it through CLI.\nIf not, you can always read here.\nUsually, in the beginning, people start with simple ssh \u0026lt;user\u0026gt;@\u0026lt;host\u0026gt; CLI usage. With time, people start using more and more advanced options which results in having messed-up commands that are hard or impossible to remember.\nLet\u0026rsquo;s give you an example:\n## SSH with custom non-default port ssh \u0026lt;user\u0026gt;@\u0026lt;long_host\u0026gt; -p \u0026lt;custom_non_default_port\u0026gt; # SSH with custom access file ssh -i /path/to/another_access_file \u0026lt;another_user\u0026gt;@\u0026lt;another_long_host\u0026gt; -p \u0026lt;some_magical_non_default_port\u0026gt; # SSH through Jump server ssh -J \u0026lt;magical_host_to_jump_server\u0026gt; \u0026lt;target_host\u0026gt; #.","title":"SSH access made easy üìü"},{"content":"Init blogpost üé¨\necho Hello World ","permalink":"https://thetooth.io/blog/thebeginning/","summary":"Init blogpost üé¨\necho Hello World ","title":"The Beginning"}]